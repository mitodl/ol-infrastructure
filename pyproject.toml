[tool.poetry]
name = "ol-infrastructure"
version = "0.1.0"
description = "Infrastructure management, configuration management logic, and Packer templates for building and deploying images to run services in a production environment."
authors = ["MIT Open Learning Engineering <oldevops@mit.edu>"]
license = "BSD-3-Clause"
readme = "README.md"
classifiers = [
    'Operating System :: Linux',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
]
repository = "https://github.com/mitodl/ol-infrastructure"
packages = [
    {include = "ol_infrastructure", from = "src"},
    {include = "bridge", from = "src"},
    {include = "bilder", from = "src"},
    {include = "ol_concourse", from = "src"},
]

[tool.poetry.dependencies]
python = "^3.12"
boto3 = "^1.24"
httpx = "^0.28.0"
hvac = {extras = ["parser"], version = "^2.0.0"}
parliament = "^1.6.0"
pulumi = "^3.39.1"
pulumi-aws = "^6.0.0"
pulumi-fastly = "^8.0.0"
pulumi-github = "^6.0.0"
pulumi-mailgun = "^3.0.0"
pulumi-tls = "^5.0.0"
pulumi-vault = "^6.0.0"
pulumi_consul = "^3.5.0"
pydantic = "^2"
pyinfra = "^3.0"
pulumi-mongodbatlas = "^3.3.0"
bcrypt = "^4.0.0"
pulumi-keycloak = "^6.0.0"
pydantic-settings = "^2.0.1"
pulumiverse-heroku = "^1.0.3"
pulumi-eks = "^3.8.0"
pulumi-aws-native = "^1.25.0"

[tool.poetry.group.dev.dependencies]
copier = "*"
datamodel-code-generator = "*"
diagrams = "*"
mypy = "*"
pre-commit = "^4.0.0"
pytest = "^8.0.0"
pytest-testinfra = "^10.0.0"
ruff = "^0"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.12"
plugins = [
  "pydantic.mypy"
]
follow_imports = "normal"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true
# for strict mypy: (this is the tricky one :-))
# disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
target-version = "py312"
line-length = 88
lint.select = [
    "A",  # flake8-builtins
    # "AIR",  # Airflow
    # "ANN",  # flake8-annotations
    "ARG",  # flake8-unused-arguments
    # "ASYNC",  # flake8-async
    "B",  # flake8-bugbear
    "BLE",  # flake8-blind-except
    "C4",  # flake8-comprehensions
    "C90",  # mccabe
    # "COM",  # flake8-commas
    "CPY",  # flake8-copyright
    "D",  # pydocstyle
    # "DJ",  # flake8-django
    "DTZ",  # flake8-datetimez
    "E",  # Pycodestyle Error
    "EM",  # flake8-errmsg
    "ERA",  # eradicate
    "EXE",  # flake8-executable
    "F",  # Pyflakes
    "FA",  # flake8-future-annotations
    "FBT",  # flake8-boolean-trap
    "FIX",  # flake8-fixme
    "FLY",  # flynt
    # "FURB",  # refurb
    "G",  # flake8-logging-format
    "I",  # isort
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "INT",  # flake8-gettext
    "N",  # pep8-naming
    # "NPY",  # NumPy-specific rules
    # "PD",  # pandas-vet
    "PERF",  # Perflint
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",  # Pylint
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "S",  # flake8-bandit
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    # "TCH",  # flake8-type-checking
    "TD",  # flake8-todos
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Pycodestyle Warning
    "YTT",  # flake8-2020
]
lint.ignore = [
    "A005",
    "B008",
    "B905",
    "D104",
    "D200",
    "D202",
    "D205",
    "D301",
    "D400",
    "N803",
    "N806",
    "N999",
    "PIE804",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "SIM115",
    "UP007"
]
lint.typing-modules = ["colour.hints"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101"]
"test_*.py" = ["S101"]
"src/ol_infrastructure/substructure/vault/pki/__main__.py" = ["E501"]
"src/ol_infrastructure/lib/fastly.py" = ["E501"]
