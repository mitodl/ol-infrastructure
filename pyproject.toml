[tool.poetry]
name = "ol-infrastructure"
version = "0.1.0"
description = "Infrastructure management, configuration management logic, and Packer templates for building and deploying images to run services in a production environment."
authors = ["MIT Open Learning Engineering <oldevops@mit.edu>"]
license = "BSD-3-Clause"
readme = "README.md"
classifiers = [
    'Operating System :: Linux',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
]
repository = "https://github.com/mitodl/ol-infrastructure"
packages = [
    {include = "ol_infrastructure", from = "src"},
    {include = "bridge", from = "src"},
    {include = "bilder", from = "src"},
]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
boto3 = "^1.24"
httpx = "^0.23.0"
hvac = {extras = ["parser"], version = "^1.0.0"}
parliament = "^1.6.0"
pulumi = "^3.39.1"
pulumi-aws = "^5.13.0"
pulumi-fastly = "^7.0.0"
pulumi-github = "^5.0.0"
pulumi-tls = "^4.1.0"
pulumi-vault = "^5.5.0, !=5.7.0"
pulumi_consul = "^3.5.0"
pydantic = "^1"
pyinfra = "^2.3"
pulumi-mongodbatlas = "^3.3.0"
bcrypt = "^4.0.0"

[tool.poetry.group.dev.dependencies]
black = "*"
copier = "*"
datamodel-code-generator = "^0.17.0"
diagrams = "*"
mypy = "<1.2"
pre-commit = "^3.0.0"
pytest = "^7.1.1"
pytest-testinfra = "^7.0.0"
pyupgrade = "^3.0.0"
ruff = "^0.0.254"


[tool.black]
target-version = ["py38"]

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "A",      # flake8-builtins
    # "ARG",  # flake8-unused-arguments
    # "ANN",  # flake8-annotations
    "B",      # flake8-bugbear
    # "BLE",  # flake8-blind-except
    # "C4",   # flake8-comprehensions
    # "COM",  # flake8-commas
    "DTZ",    # flake8-datetimez
    "D",      # pydocstyle
    "E",      # pydocstyle
    "ERA",  # eradicate
    # "EM",   # flake8-errmsg
    "EXE",    # flake8-executable
    "F",      # flake8
    "G",      # flake8-logging-format
    "ICN",    # flake8-import-conventions
    # "INP",    # flake8-no-pep420
    "ISC",    # flake8-implicit-str-concat
    "N",      # pep8-naming
    # "PD",   # pandas-vet
    "PIE",    # flake8-pie
    # "PGH",  # pygrep-hooks                [Enable]
    # "PT",   # flake8-pytest-style         [Enable]
    "PTH",  # flake8-use-pathlib
    "PLR",    # Refactor
    "Q",      # flake8-quotes
    "RET",    # flake8-return
    "S",      # flake8-bandit
    "SIM",    # flake8-simplify
    "T10",    # flake8-debugger
    "T20",    # flake8-print
    "TCH",  # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "W",      # pydocstyle
    "YTT",     # flake8-2020
    "RUF"
]
ignore = [
    "A003",
    "B008",
    "B905",
    "D104",
    "D200",
    "D202",
    "D205",
    "D301",
    "D400",
    "ERA001",
    "ISC001",
    "N801",
    "N802",
    "N803",
    "N806",
    "N813",
    "N815",
    "N816",
    "PIE804",
    "PLR2004",
    "PTH123",
    "RET504",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "S101",
    "SIM108",
    "T201",
    "TCH001",
    "TCH002",
    "TCH003",
    "UP007"

]
typing-modules = ["colour.hints"]
fixable = ["I", "D", "B", "E", "F", "UP", "C4", "Q", "RET", "PIE", "SIM","UP", "W", "RUF"]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.ruff.per-file-ignores]
"test_*.py" = ["S101"]
"src/ol_infrastructure/substructure/vault/pki/__main__.py" = ["E501"]
"src/ol_infrastructure/lib/fastly.py" = ["E501"]
