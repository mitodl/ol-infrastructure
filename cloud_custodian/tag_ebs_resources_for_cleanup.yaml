---
policies:
  # The first set of policies finds ODL autoscale resources and identifies AMIs that were, at one point, ever used with them.
  # It will then clean up the AMIs + snapshots
- name: find-mitodl-asg
  resource: aws.asg
  description: |
    Find all MIT ODL autoscale groups and take no action. Linked launch templates are used in the next policy.
  filters:
  - and:
    - "tag:pulumi_managed": present
    - type: value
      key: 'tag:OU'
      op: ne
      value: 'ike'
- name: find-mitodl-ltv
  resource: aws.launch-template-version
  description: |
    Find all inactive MIT ODL launch template version and take no action. Will used the linked AMI in the next policy.
  filters:
  - and:
    - type: value
      key: LaunchTemplateId
      op: in
      value_from:
        url: file:find-mitodl-asg/resources.json
        format: json
        expr: "[].Instances[].LaunchTemplate.LaunchTemplateId"
    - DefaultVersion: false
    - type: value
      key: 'tag:OU'
      op: ne
      value: 'ike'
- name: find-and-mark-mitodl-ami
  resource: aws.ami
  description: |
    Find all MIT ODL AMI IDs that go with the inactive launch template versions and tag them for cleanup.
  filters:
  - and:
    - type: value
      key: ImageId
      op: in
      value_from:
        url: file:find-mitodl-ltv/resources.json
        format: json
        expr: "[].LaunchTemplateData.ImageId"
    - type: image-age
      op: gt
      days: 30
    - type: unused
      value: true
    - type: value
      key: 'tag:custodian_cleanup'
      value: absent
    - type: value
      key: 'tag:OU'
      op: ne
      value: 'ike'
  actions:
  - type: mark-for-op
    tag: custodian_cleanup
    op: deregister
    days: 30
- name: find-and-mark-associated-mitodl-snapshots
  resource: aws.ebs-snapshot
  description: |
    Find the snapshots associated with the unused AMIs from the previous policy. Tag them for deletion. Found snapshots will be used in the next policy to tmark the volumes for cleanup as well.
  filters:
  - and:
    - type: value
      key: SnapshotId
      op: in
      value_from:
        url: file:find-and-mark-mitodl-ami/resources.json
        format: json
        expr: "[].BlockDeviceMappings[].Ebs.SnapshotId"
    - type: age
      op: gt
      days: 30
    - type: value
      key: Description
      op: regex
      value: '^.*CreateImage.*$'
    - type: value
      key: 'tag:custodian_cleanup'
      value: absent
    - type: value
      key: 'tag:OU'
      op: ne
      value: 'ike'
  actions:
  - type: mark-for-op
    tag: custodian_cleanup
    op: delete
    days: 30

# This second chain of policies find the AMIs created by packer that were never associated with an autoscaling resource.
# It will mark them for cleanup and then loop through their associated snapshots and mark those as well.
- name: find-and-mark-unassociated-mitodl-ami
  resource: aws.ami
  description: |
    Find all inactive MITODL AMIs created by packer and mark them for cleanup. These AMIs were never associated with a launch template.
  filters:
  - and:
    - type: value
      key: Description
      op: regex
      value: '^Deployment image for .* generated at \d{14}$'
    - type: image-age
      op: gt
      days: 30
    - type: unused
      value: true
    - type: value
      key: 'tag:custodian_cleanup'
      value: absent
    - type: value
      key: 'tag:OU'
      op: ne
      value: 'ike'
  actions:
  - type: mark-for-op
    tag: custodian_cleanup
    op: deregister
    days: 30
- name: find-and-mark-unassociated-mitodl-snapshots
  resource: aws.ebs-snapshot
  description: |
    Find the snapshots associated with the unused AMIs from the previous policy. Tag them for deletion.
  filters:
  - and:
    - type: value
      key: SnapshotId
      op: in
      value_from:
        url: file:find-and-mark-unassociated-mitodl-ami/resources.json
        format: json
        expr: "[].BlockDeviceMappings[].Ebs.SnapshotId"
    - type: age
      op: gt
      days: 30
    - type: value
      key: Description
      op: regex
      value: '^.*CreateImage.*$'
    - type: value
      key: 'tag:custodian_cleanup'
      value: absent
    - type: value
      key: 'tag:OU'
      op: ne
      value: 'ike'
  actions:
  - type: mark-for-op
    tag: custodian_cleanup
    op: delete
    days: 30
