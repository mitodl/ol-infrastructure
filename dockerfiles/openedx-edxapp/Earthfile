VERSION 0.7
ARG PYTHON_VERSION="3.11"
FROM python:$PYTHON_VERSION"-bookworm"

apt-base:
  ENV DEBIAN_FRONTEND=noninteractive
  COPY ./apt-pkg-list /root/
  COPY ./pip_package_lists /root/pip_package_lists
  COPY ./pip_package_overrides /root/pip_package_overrides
  RUN apt update \
    && apt install -y --no-install-recommends $(cat /root/apt-pkg-list) \
    && apt autoremove -y \
    && apt clean \
    && rm -rf /var/lib/apt/lists/*
  SAVE ARTIFACT /root/pip_package_lists

locales:
  FROM +apt-base
  ARG OPENEDX_I18N_VERSION="open-release/sumac.master"
  WORKDIR /tmp
  RUN curl -L -o openedx-i18n.tar.gz https://github.com/openedx/openedx-i18n/archive/$OPENEDX_I18N_VERSION.tar.gz \
    && tar xzf /tmp/openedx-i18n.tar.gz \
    && mkdir -p /openedx/locale/contrib \
    && mv openedx-i18n-*/edx-platform/locale /openedx/locale/contrib
  CACHE /openedx/locale
  SAVE ARTIFACT /openedx/locale

get-code:
  ARG EDX_PLATFORM_DIR=thereisnosuchdirectoryasthisone
  LOCALLY
  IF [ -d $EDX_PLATFORM_DIR ]
  # Two required vars to specify the git repo and sha ref the build from.
    SAVE ARTIFACT $EDX_PLATFORM_DIR /edx-platform
  ELSE
    FROM +apt-base
    ARG --required EDX_PLATFORM_GIT_REPO
    ARG --required EDX_PLATFORM_GIT_BRANCH
    GIT CLONE --branch $EDX_PLATFORM_GIT_BRANCH $EDX_PLATFORM_GIT_REPO /openedx/edx-platform
    SAVE ARTIFACT /openedx/edx-platform /edx-platform
  END

install-deps:
  FROM +apt-base
  ARG --required DEPLOYMENT_NAME
  ARG --required RELEASE_NAME
  ARG NODE_VERSION="20.18.0"
  COPY +get-code/edx-platform /openedx/edx-platform
  RUN cp /openedx/edx-platform/requirements/edx/base.txt /root/pip_package_lists/edx_base.txt && cp /openedx/edx-platform/requirements/edx/assets.txt /root/pip_package_lists/edx_assets.txt
  RUN ls -l /root/pip_package_lists/
  RUN pip install --no-warn-script-location --user --no-cache-dir -r /root/pip_package_lists/edx_base.txt -r /root/pip_package_lists/edx_assets.txt -r /root/pip_package_lists/$RELEASE_NAME/$DEPLOYMENT_NAME.txt
  IF [ "$DEPLOYMENT_NAME" = "mitxonline" ]
    RUN pip uninstall --yes "edx-name-affirmation"
    # This is a hack to address issues with lxml and xmlsec compatibilities with libxml2 (2024-11-21 TMM)
  END
  RUN pip uninstall --yes lxml xmlsec
  RUN pip install --no-warn-script-location --user --no-cache-dir -r /root/pip_package_overrides/$RELEASE_NAME/$DEPLOYMENT_NAME.txt
  WORKDIR /openedx/edx-platform
  ENV PATH /root/.local/bin:/openedx/nodeenv/bin:${PATH}
  ENV NPM_REGISTRY "https://registry.npmjs.org/"
  RUN nodeenv /openedx/nodeenv --node=$NODE_VERSION --prebuilt \
    && npm clean-install -s --registry=$NPM_REGISTRY
  SAVE ARTIFACT /openedx/edx-platform
  SAVE ARTIFACT /openedx/nodeenv
  SAVE ARTIFACT /root/.local

themes:
  ARG THEME_DIR=thereisnosuchdirectoryasthisone
  ARG --required DEPLOYMENT_NAME
  LOCALLY
  IF [ -d $THEME_DIR ]
    SAVE ARTIFACT $THEME_DIR /theme
  ELSE
    FROM +apt-base
    ARG --required THEME_GIT_REPO
    ARG --required THEME_GIT_BRANCH
    GIT CLONE --branch $THEME_GIT_BRANCH $THEME_GIT_REPO /openedx/themes/$DEPLOYMENT_NAME
    SAVE ARTIFACT /openedx/themes/$DEPLOYMENT_NAME /theme
  END

tutor-utils:
  FROM +apt-base
  ARG TUTOR_REPO="https://github.com/overhangio/tutor.git"
  ARG TUTOR_VERSION="v19.0.0"
  GIT CLONE --branch $TUTOR_VERSION $TUTOR_REPO /openedx/tutor
  SAVE ARTIFACT /openedx/tutor/tutor/templates/build/openedx/bin

dockerize:
  FROM docker.io/powerman/dockerize@sha256:f3ecfd5ac0f74eed3990782309ac6bf8b700f4eca0ea9e9ef507b11742c19cc6
  SAVE ARTIFACT /usr/local/bin/dockerize

collected:
  FROM +apt-base
  ARG APP_USER_ID=1000
  ARG --required DEPLOYMENT_NAME
  RUN if [ "$APP_USER_ID" = 0 ]; then echo "app user may not be root" && false; fi
  RUN useradd --home-dir /openedx --create-home --shell /bin/bash/ --uid ${APP_USER_ID} app
  USER ${APP_USER_ID}
  COPY +dockerize/dockerize /usr/local/bin/dockerize
  COPY +install-deps/edx-platform /openedx/edx-platform
  COPY +install-deps/nodeenv /openedx/nodeenv
  COPY +install-deps/.local /openedx/.local
  COPY +themes/theme /openedx/themes/$DEPLOYMENT_NAME
  COPY +tutor-utils/bin /openedx/bin
  IF [ "$DEPLOYMENT_NAME" != "mitxonline"]
    COPY +locales/locale /openedx/locale
  END
  RUN chmod a+x /openedx/bin/*
  ENV PATH /openedx/.local/bin:/openedx/bin:/openedx/edx-platform/node_modules/.bin:/openedx/nodeenv/bin:${PATH}
  WORKDIR /openedx/edx-platform
  RUN pip install --no-warn-script-location --user --no-cache-dir -e . \
    && mkdir -p /openedx/config ./lms/envs/mitol ./cms/envs/mitol
  COPY settings/lms.env.yml /openedx/config/lms.env.yml
  COPY settings/cms.env.yml /openedx/config/cms.env.yml

  COPY settings/lms/assets.not_py /openedx/edx-platform/lms/envs/mitol/assets.py
  COPY settings/lms/i18n.not_py /openedx/edx-platform/lms/envs/mitol/i18n.py

  COPY settings/cms/assets.not_py /openedx/edx-platform/cms/envs/mitol/assets.py
  COPY settings/cms/i18n.not_py /openedx/edx-platform/cms/envs/mitol/i18n.py

  COPY custom_settings_module/lms_settings.not_py /openedx/edx-platorm/cms/envs/lms_settings.py
  COPY custom_settings_module/cms_settings.not_py /openedx/edx-platorm/cms/envs/cms_settings.py
  COPY custom_settings_module/models.not_py /openedx/edx-platform/openedx/core/djangoapps/settings/models.py
  COPY custom_settings_module/utils.not_py /openedx/edx-platform/openedx/core/djangoapps/settings/utils.py

  COPY settings/set_waffle_flags.not_py /openedx/edx-platform/set_waffle_flags.py
  COPY settings/process_scheduled_emails.not_py /openedx/edx-platform/process_scheduled_emails.py
  COPY settings/saml_pull.not_py /openedx/edx-platform/saml_pull.py

  ENV REVISION_CFG /openedx/config/revisions.yml
  ENV LMS_CFG /openedx/config/lms.env.yml
  ENV CMS_CFG /openedx/config/cms.env.yml
  ENV NO_PYTHON_UNINSTALL 1
  ENV NO_PREREQ_INSTALL 0


fetch-translations:
  FROM +collected
  IF [ -e "/openedx/edx-platform/openedx/core/djangoapps/plugins/management/commands/pull_plugin_translations.py" ]
    ARG OPENEDX_TRANSLATIONS_REPOSITORY=openedx/openedx-translations
    ARG OPENEDX_TRANSLATIONS_BRANCH=main
    ARG OPENEDX_ATLAS_OPTIONS="--repository $OPENEDX_TRANSLATIONS_REPOSITORY --revision $OPENEDX_TRANSLATIONS_BRANCH"
   ## Pull translations for edx_django_utils.plugins for both lms and cms
    ENV DJANGO_SETTINGS_MODULE lms.envs.mitol.i18n
    WORKDIR /openedx/edx-platform
    RUN python manage.py lms pull_plugin_translations $OPENEDX_ATLAS_OPTIONS && \
      python manage.py lms compile_plugin_translations && \
      ## pull xblock translations via atlas
      python manage.py lms pull_xblock_translations $OPENEDX_ATLAS_OPTIONS && \
      python manage.py lms compile_xblock_translations && \
      ## pull translations via atlas
      atlas pull $OPENEDX_ATLAS_OPTIONS \
        translations/edx-platform/conf/locale:conf/locale \
      python manage.py lms compilemessages && \
      python manage.py lms compilejsi18n
    ENV DJANGO_SETTINGS_MODULE cms.envs.mitol.i18n
    RUN python manage.py cms compile_xblock_translations && \
      atlas pull $OPENEDX_ATLAS_OPTIONS \
        translations/studio-frontend/src/i18n/messages:conf/plugins-locale/studio-frontend && \
      python manage.py cms compilejsi18n
  END
  SAVE ARTIFACT /openedx/edx-platform /edx-platform

build-static-assets-nonprod:
  FROM +fetch-translations
  # ENV JS_ENV_EXTRA_CONFIG '{"PROCTORTRACK_CDN_URL": "\"https://verificientstatic-preprod.storage.googleapis.com/cdn/fb_cjs/edx_preprod_cjs.IQEQWWZ2.js\"", "PROCTORTRACK_CONFIG_KEY": "\"1PKRwFPezxXj3TsD\""}'
  ENV JS_ENV_EXTRA_CONFIG='{"PROCTORTRACK_CDN_URL":"\"\"","PROCTORTRACK_CONFIG_KEY":"\"\""}'
  RUN pip install --no-warn-script-location --user --no-cache-dir -e "git+https://github.com/openedx/codejail.git@babbe784b48bb9888aa159d8b401cbe5e07f0af4#egg=codejail" \
    && pip install --no-warn-script-location --user --no-cache-dir -e "git+https://github.com/openedx/django-wiki.git@0a1d555a1fa2834cc46367968aad907a5667317b#egg=django_wiki" \
    && pip install --no-warn-script-location --user --no-cache-dir -e "git+https://github.com/openedx/olxcleaner.git@2f0d6c7f126cbd69c9724b7b57a0b2565330a297#egg=olxcleaner"
  ENV STATIC_ROOT_LMS=/openedx/staticfiles/
  ENV NODE_ENV=prod
  ARG --required DEPLOYMENT_NAME
  RUN mkdir -p $STATIC_ROOT_LMS && npm run postinstall \
    && npm run compile-sass -- --theme-dir /openedx/themes/ --theme $DEPLOYMENT_NAME \
    && python manage.py lms collectstatic --noinput --settings=mitol.assets \
    && python manage.py cms collectstatic --noinput --settings=mitol.assets \
    && npm run webpack 2> /dev/null \
    && python manage.py lms collectstatic --noinput --settings=mitol.assets \
    && python manage.py cms collectstatic --noinput --settings=mitol.assets \
    && rdfind -makesymlinks true -followsymlinks true /openedx/staticfiles/ \
    && mkdir -p /openedx/data/export_course_repos \
    && mkdir -p /openedx/data/var/log/edx \
    && ls -ltrah /openedx/staticfiles \
    && tar czf - /openedx/staticfiles > /openedx/staticfiles-nonprod.tar.gz
  SAVE ARTIFACT /openedx/staticfiles-nonprod.tar.gz AS LOCAL staticfiles-nonprod.tar.gz

build-static-assets-production:
  FROM +fetch-translations
  # ENV JS_ENV_EXTRA_CONFIG '{"PROCTORTRACK_CDN_URL": "\"https://verificientstatic.storage.googleapis.com/cdn/fb_cjs/edx_us_cjs.IQEQWWZ2.js\"", "PROCTORTRACK_CONFIG_KEY": "\"1PKRwFPezxXj3TsD\""}'
  ENV JS_ENV_EXTRA_CONFIG='{"PROCTORTRACK_CDN_URL":"\"\"","PROCTORTRACK_CONFIG_KEY":"\"\""}'
  RUN pip install --no-warn-script-location --user --no-cache-dir -e "git+https://github.com/openedx/codejail.git@babbe784b48bb9888aa159d8b401cbe5e07f0af4#egg=codejail" \
    && pip install --no-warn-script-location --user --no-cache-dir -e "git+https://github.com/openedx/django-wiki.git@0a1d555a1fa2834cc46367968aad907a5667317b#egg=django_wiki" \
    && pip install --no-warn-script-location --user --no-cache-dir -e "git+https://github.com/openedx/olxcleaner.git@2f0d6c7f126cbd69c9724b7b57a0b2565330a297#egg=olxcleaner"
  ENV STATIC_ROOT_LMS=/openedx/staticfiles/
  ENV NODE_ENV=prod
  ARG --required DEPLOYMENT_NAME
  RUN mkdir -p $STATIC_ROOT_LMS && npm run postinstall \
    && npm run compile-sass -- --theme-dir /openedx/themes/ --theme $DEPLOYMENT_NAME \
    && python manage.py lms collectstatic --noinput --settings=mitol.assets \
    && python manage.py cms collectstatic --noinput --settings=mitol.assets \
    && npm run webpack 2> /dev/null \
    && python manage.py lms collectstatic --noinput --settings=mitol.assets \
    && python manage.py cms collectstatic --noinput --settings=mitol.assets \
    && rdfind -makesymlinks true -followsymlinks true /openedx/staticfiles/ \
    && mkdir -p /openedx/data/export_course_repos \
    && mkdir -p /openedx/data/var/log/edx \
    && ls -ltrah /openedx/staticfiles \
    && tar czf - /openedx/staticfiles > /openedx/staticfiles-production.tar.gz
  SAVE ARTIFACT /openedx/staticfiles-production.tar.gz AS LOCAL staticfiles-production.tar.gz

docker-image:
  FROM +fetch-translations
  ARG --required DEPLOYMENT_NAME
  ARG --required RELEASE_NAME
  ENV DJANGO_SETTINGS_MODULE="invalid"
  RUN mkdir /openedx/.ssh \
    && chown app:app /openedx/.ssh \
    && chmod 0700 /openedx/.ssh \
    && ssh-keyscan 'github.com' 'github.mit.edu' >> /openedx/.ssh/known_hosts \
    && chmod 0600 /openedx/.ssh/known_hosts \
    && mkdir -p /openedx/data/export_course_repos
  CMD uwsgi uwsgi.ini
  SAVE IMAGE mitodl/edxapp-$DEPLOYMENT_NAME-$RELEASE_NAME:latest

all:
  BUILD +docker-image
  BUILD +build-static-assets-production
  BUILD +build-static-assets-nonprod
