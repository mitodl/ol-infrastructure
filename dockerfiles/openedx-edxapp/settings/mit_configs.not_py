import codecs
import os
import warnings
import yaml

from django.core.exceptions import ImproperlyConfigured

from .production import *

try:
    ADDITIONAL_CONFIG_FILES = get_env_setting("ADDITIONAL_CONFIG_FILES")
except ImproperlyConfigured:
    # If the environment variable is not set, treat it as an empty string
    # so no additional config files are processed.
    ADDITIONAL_CONFIG_FILES = ""

# Only proceed if ADDITIONAL_CONFIG_FILES is not empty
if ADDITIONAL_CONFIG_FILES:
    for config_file in ADDITIONAL_CONFIG_FILES.split(","):
        config_file = config_file.strip()
        if not os.path.exists(config_file):
            raise ImproperlyConfigured(
                f"Configuration file {config_file} does not exist."
            )

        with codecs.open(config_file, "r", "utf-8") as f:
            try:
                _YAML_TOKENS = yaml.safe_load(f)
                vars().update({key: value for key, value in _YAML_TOKENS.items()})
            except yaml.YAMLError as e:
                warnings.warn(f"Error parsing YAML file {config_file}: {e}")
                raise ImproperlyConfigured(
                    f"Invalid YAML configuration in {config_file}."
                )
