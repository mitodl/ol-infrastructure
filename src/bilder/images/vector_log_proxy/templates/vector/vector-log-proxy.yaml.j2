---
api:
  enabled: false
sources:
  fastly_log_proxy:
    type: http_server
    address: 0.0.0.0:9443
    auth:
      password: ${FASTLY_PROXY_PASSWORD}
      username: ${FASTLY_PROXY_USERNAME}
    decoding:
      codec: bytes
    tls:
      enabled: true
      key_file: '/etc/vector/ssl/odl_wildcard.key'
      crt_file: '/etc/vector/ssl/odl_wildcard.cert'
      verify_certificate: false
  heroku_log_proxy:
    type: heroku_logs
    acknowledgements: false
    address: 0.0.0.0:9000
    decoding:
      codec: bytes
    auth:
      password: "${HEROKU_PROXY_PASSWORD}"
      username: "${HEROKU_PROXY_USERNAME}"
    tls:
      enabled: true
      key_file: '/etc/vector/ssl/odl_wildcard.key'
      crt_file: '/etc/vector/ssl/odl_wildcard.cert'
      verify_certificate: false
    query_parameters:
    - "app_name"
    - "environment"
    - "service"
transforms:
  fastly_drop_unwanted_logs:
    type: remap
    inputs:
    - "fastly_log_proxy"
    source: |
      event, err = parse_json(.message)
      if event != null {
        .,err = merge(., event)
        del(.message)
      }
  heroku_drop_unwanted_logs:
    type: remap
    inputs:
    - "heroku_log_proxy"
    source: |
      # Drop all messages from uninteresting heroku apps
      abort_match_boring_apps, err = (match_any(.app_name, [r'ol-eng-library', r'.*wiki.*']))
      if abort_match_boring_apps {
        abort
      }

sinks:
  ship_fastly_logs_to_grafana_cloud:
    inputs:
    - 'fastly_drop_unwanted_logs'
    type: loki
    auth:
      strategy: basic
      password: ${GRAFANA_CLOUD_API_KEY}
      user: "${GRAFANA_CLOUD_LOKI_API_USER}"
    endpoint: https://logs-prod-us-central1.grafana.net
    encoding:
      codec: json
    labels:
    # Probably change this as appropriate
    {% raw %}
      environment: "{{ environment }}"
      application: "{{ application }}"
      service: "fastly"
    {% endraw %}
    out_of_order_action: rewrite_timestamp
  ship_heroku_logs_to_grafana_cloud:
    inputs:
    - 'heroku_drop_unwanted_logs'
    type: loki
    auth:
      strategy: basic
      password: ${GRAFANA_CLOUD_API_KEY}
      user: "${GRAFANA_CLOUD_LOKI_API_USER}"
    endpoint: https://logs-prod-us-central1.grafana.net
    encoding:
      codec: json
    labels:
    {% raw %}
      environment: "{{ environment }}"
      application: "{{ app_name }}"
      service: "{{ service }}"
    {% endraw %}
    out_of_order_action: rewrite_timestamp
