---
sources:
  collect_consul_metrics:
    type: prometheus_scrape
    endpoints:
    - http://localhost:8500/v1/agent/metrics?format=prometheus
    scrape_interval_secs: 60

transforms:
  cleanup_consul_metrics:
    type: remap
    drop_on_abort: true
    inputs:
    - 'collect_consul_metrics'
    source: |
      ## Any metrics that match these prefixes or names will be dropped entirely
      abort_name_match, err = match_any(.name, [r'^consul_raft_replication_hartbeat_.*', r'^consul_raft_replication_appendEntries_rpc_.*', r'^consul_raft_replication_appendEntries_logs_.*', r'^consul_raft_replication_installSnapshot_.*'])
      if abort_name_match {
        abort
      }

  add_labels_to_consul_metrics:
    type: remap
    inputs:
    - 'cleanup_consul_metrics'
    source: |
      .tags.job = "integrations/consul"
      .tags.environment = "${ENVIRONMENT}"
      .tags.application = "consul"
      .tags.service = "consul"

sinks:
  ship_consul_metrics_to_grafana_cloud:
    inputs:
    - 'add_labels_to_consul_metrics'
    type: prometheus_remote_write
    endpoint: https://prometheus-prod-10-prod-us-central-0.grafana.net/api/prom/push
    healthcheck: false
    auth:
      strategy: basic
      user: "${GRAFANA_CLOUD_PROMETHEUS_API_USER}"
      password: ${GRAFANA_CLOUD_API_KEY}
