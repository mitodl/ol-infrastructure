---
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3.8"
services:
  ## Apache Tika Server
  tika:
    # We can't use the antideluvian version we had as it's not docker compatible.
    image: apache/tika:2.9.0.0-full
    # Use custom script as entrypoint to go fetch models and setup recognisers
    restart: on-failure
    ports:
    - "9998:9998"
    # volumes:
    #   -  ./sample-configs/ner/:/ner/
    labels:
      # Explicitly tell Traefik to expose this container
    - "traefik.enable=true"
      # Token authentication via environment variable
    - "traefik.http.middlewares.checkheaders.plugin.checkheadersplugin.headers.header"
    - "traefik.http.middlewares.checkheaders.plugin.checkheadersplugin.headers.name=X-Access-Token"
    - "traefik.http.middlewares.checkheaders.plugin.checkheadersplugin.headers.values=${X_ACCESS_TOKEN}"
    - "traefik.http.middlewares.checkheaders.plugin.checkheadersplugin.headers.matchtype=one"
    - "traefik.http.middlewares.checkheaders.plugin.checkheadersplugin.headers.debug=true"
      # Add labels for wildcard TLS cert
    - "traefik.http.routers.tika.tls=true"
    - "traefik.http.routers.tika.priority=1"
    - "traefik.http.routers.tika.middlewares=checkheaders"
    - "traefik.http.routers.tika.entrypoints=https"
      # The domain the service will respond to
    - "traefik.http.routers.tika.rule=Host(`${DOMAIN}`)"
    # Health check
    - "traefik.http.routers.healthcheck.tls=true"
    - "traefik.http.routers.healthcheck.priority=2"
    - "traefik.http.routers.healthcheck.entrypoints=https"
    - "traefik.http.routers.healthcheck.rule=Path(`/version`)"

    # ODL wildcard cert
    - "traefik.tls.stores.OdlWildcard.defaultcertificate.certFile=/etc/traefik/star.odl.mit.edu.crt"
    - "traefik.tls.stores.OdlWildcard.defaultcertificate.keyFile=/etc/traefik/star.odl.mit.edu.key"
  traefik:
    image: traefik:v2.10
    command:
    - "--configFile=/etc/traefik/traefik.yaml"
    env_file:
    - .env
    ports:
    - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /etc/traefik/:/etc/traefik/
