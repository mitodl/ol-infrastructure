---
sources:
  collect_caddy_journald_logs:
    type: journald
    include_units:
    - caddy

  collect_caddy_listener_logs:
    type: file
    read_from: end
    file_key: log_file
    include:
    - /var/log/caddy/caddy.log

transforms:
  filter_elb_checks:
    type: filter
    inputs:
    - 'collect_caddy_journald_logs'
    condition: '! contains!(.message, "ELB-HealthChecker")'

  parse_caddy_logs:
    type: remap
    inputs:
    - 'filter_elb_checks'
    - 'collect_caddy_listener_logs'
    source: |
      event, err = parse_json(.message)
      if event != null {
        .,err = merge(., event)
        .environment = "${ENVIRONMENT}"
      }

  enrich_caddy_logs:
    type: aws_ec2_metadata
    inputs:
    - 'parse_caddy_logs'
    namespace: ec2

sinks:
  ship_caddy_logs_to_grafana_cloud:
    inputs:
    - 'enrich_caddy_logs'
    type: loki
    auth:
      strategy: basic
      password: ${GRAFANA_CLOUD_API_KEY}
      user: "${GRAFANA_CLOUD_LOKI_API_USER}"
    endpoint: https://logs-prod-us-central1.grafana.net
    encoding:
      codec: json
    labels:
      environment: ${ENVIRONMENT}
      application: tika
      service: caddy
    out_of_order_action: rewrite_timestamp
