---
sources:
  collect_keycloak_metrics:
    type: prometheus_scrape
    endpoints:
    - http://localhost:9000/metrics
    scrape_interval_secs: 60

transforms:
  noop_metric_global_funnel:
    type: remap
    inputs:
    - 'collect_keycloak_metrics'
    source: |
      .tags.environment = "${ENVIRONMENT}"
      .tags.application = "keycloak"
      .tags.service = "keycloak"

      # Drop metrics if:
      # 1. Name starts with "vendor_statistics_" AND service is "keycloak"
      # OR
      # 2. Name is "http_server_requests_seconds_bucket" AND service is "keycloak"
      if (starts_with(.name, "vendor_statistics_") || .name == "http_server_requests_seconds_bucket") && .tags.service == "keycloak" {
        abort
      }

  parse_keycloak_logs:
    type: remap
    inputs:
    - "parse_docker_stdout_stderr"
    source: |
      .application = "keycloak"
      # Drop all messages regarding polling from the ELB
      abort_match_elb, err = (match_any(.message, [r'ELB-HealthChecker.*', r'/ping.*']))
      if abort_match_elb {
        abort
      }

  enrich_logs_global_funnel:
    type: aws_ec2_metadata
    inputs:
    - "parse_keycloak_logs"
    namespace: ec2
