---
version: "3.7"
services:
# Init containers
  lms-permissions:
    image: overhangio/openedx-permissions:${TUTOR_PERMISSIONS_TAG}
    profiles:
    - web
    - worker
    env_file:
    - ./.env
    command: ["1000", "/openedx/data", "/openedx/media"]
    restart: on-failure
    volumes:
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
  cms-permissions:
    image: overhangio/openedx-permissions:${TUTOR_PERMISSIONS_TAG}
    profiles:
    - web
    - worker
    env_file:
    - ./.env
    command: ["1000", "/openedx/data", "/openedx/media"]
    restart: on-failure
    volumes:
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro

# Webapp definitions
  caddy:
    image: docker.io/caddy:2.6.3
    profiles:
    - web
    env_file:
    - ./.env
    - ./.env_caddy
    restart: unless-stopped
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - ./settings/Caddyfile:/etc/caddy/Caddyfile:ro
    - ./tls/certificate:/etc/caddy/certificate:ro
    - ./tls/key:/etc/caddy/key:ro
  lms:
    image: ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - web
    env_file:
    - ./.env
    environment:
      SERVICE_VARIANT: lms
      DJANGO_SETTINGS_MODULE: lms.envs.production
      UWSGI_WORKERS: 2
    ports:
    - "8000:8000" # this is to advertise the consul service but we will block direct access with the sg
    restart: unless-stopped
    volumes:
    - ./settings/lms.env.yml:/openedx/config/lms.env.yml:ro
    - ./settings/uwsgi.ini:/openedx/edx-platform/uwsgi.ini:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - ./ssh/id_rsa:/openedx/.ssh/id_rsa:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
  cms:
    image: ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - web
    env_file:
    - ./.env
    environment:
      SERVICE_VARIANT: cms
      DJANGO_SETTINGS_MODULE: cms.envs.production
      UWSGI_WORKERS: 2
    restart: unless-stopped
    volumes:
    - ./settings/cms.env.yml:/openedx/config/cms.env.yml:ro
    - ./settings/uwsgi.ini:/openedx/edx-platform/uwsgi.ini:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - ./ssh/id_rsa:/openedx/.ssh/id_rsa:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro

# Worker definitions
  lms-migrations:
    image:  ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - worker
    env_file:
    - ./.env
    environment:
      SERVICE_VARIANT: lms
      DJANGO_SETTINGS_MODULE: lms.envs.production
    restart: on-failure
    volumes:
    - ./settings/lms.env.yml:/openedx/config/lms.env.yml:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
    command: ["python", "manage.py", "lms", "migrate", "--noinput"]
    depends_on:
      lms-permissions:
        condition: service_completed_successfully
  cms-migrations:
    image:  ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - worker
    env_file:
    - ./.env
    environment:
      SERVICE_VARIANT: cms
      DJANGO_SETTINGS_MODULE: cms.envs.production
    restart: on-failure
    volumes:
    - ./settings/cms.env.yml:/openedx/config/cms.env.yml:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
    command: ["python", "manage.py", "cms", "migrate", "--noinput"]
    depends_on:
      cms-permissions:
        condition: service_completed_successfully


  waffle-flags:
    image: ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - worker
    environment:
      SERVICE_VARIANT: lms
      DJANGO_SETTINGS_MODULE: lms.envs.production
    restart: on-failure
    volumes:
    - ./settings/lms.env.yml:/openedx/config/lms.env.yml:ro
    - ./settings/waffle_flags.yaml:/openedx/config/waffle_flags.yaml:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
    command: ["python", "set_waffle_flags.py", "/openedx/config/waffle_flags.yaml"]
    depends_on:
      lms-permissions:
        condition: service_completed_successfully
  lms-worker:
    image: ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - worker
    env_file:
    - ./.env
    environment:
      SERVICE_VARIANT: lms
      DJANGO_SETTINGS_MODULE: lms.envs.production
    command: celery --app=lms.celery worker --loglevel=info --hostname=edx.lms.core.default.%%h
      --max-tasks-per-child=100 --exclude-queues=edx.cms.core.default
    restart: unless-stopped
    volumes:
    - ./settings/lms.env.yml:/openedx/config/lms.env.yml:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - ./ssh/id_rsa:/openedx/.ssh/id_rsa:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
    depends_on:
      lms-migrations:
        condition: service_completed_successfully
      waffle-flags:
        condition: service_completed_successfully

  process-scheduled-emails:
    image: ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - worker
    environment:
      SERVICE_VARIANT: lms
      DJANGO_SETTINGS_MODULE: lms.envs.production
    restart: on-failure
    volumes:
    - ./settings/lms.env.yml:/openedx/config/lms.env.yml:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
    command: ["python", "process_scheduled_emails.py"]
    depends_on:
      lms-permissions:
        condition: service_completed_successfully

  saml-pull:
    image: ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - worker
    environment:
      SERVICE_VARIANT: lms
      DJANGO_SETTINGS_MODULE: lms.envs.production
    restart: on-failure
    volumes:
    - ./settings/lms.env.yml:/openedx/config/lms.env.yml:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
    command: ["python", "saml_pull.py"]
    depends_on:
      lms-permissions:
        condition: service_completed_successfully

  cms-worker:
    image: ${DOCKER_REPO_AND_DIGEST}
    profiles:
    - worker
    env_file:
    - ./.env
    environment:
      SERVICE_VARIANT: cms
      DJANGO_SETTINGS_MODULE: cms.envs.production
    command: celery --app=cms.celery worker --loglevel=info --hostname=edx.cms.core.default.%%h
      --max-tasks-per-child 100 --exclude-queues=edx.lms.core.default
    restart: unless-stopped
    volumes:
    - ./settings/cms.env.yml:/openedx/config/cms.env.yml:ro
    - /opt/data:/openedx/data
    - /opt/data/media:/openedx/media
    - ./ssh/id_rsa:/openedx/.ssh/id_rsa:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}:/openedx/staticfiles:ro
    - /opt/staticfiles-${ENVIRONMENT_TIER}/bundles:/openedx/edx-platform/common/static/bundles:ro
    depends_on:
      cms-migrations:
        condition: service_completed_successfully
      waffle-flags:
        condition: service_completed_successfully
