---
x-superset-image: &superset-image 610119931565.dkr.ecr.us-east-1.amazonaws.com/dockerhub/mitodl/superset@${SUPERSET_IMAGE_SHA:-latest}
x-superset-volumes: &superset-volumes
- superset_home:/app/superset_home
- vault:/var/vault

version: "3.8"
services:
  traefik:
    image: 610119931565.dkr.ecr.us-east-1.amazonaws.com/dockerhub/library/traefik:v3.2
    restart: unless-stopped
    command:
    - "--configFile=/etc/traefik/traefik.yaml"
    env_file:
    - .env
    ports:
    - "80:80"
    - "443:443"
    volumes:
    # So that Traefik can listen to the Docker events
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /etc/traefik/:/etc/traefik/

  superset:
    env_file: .env
    image: *superset-image
    container_name: superset_app
    restart: unless-stopped
    ports:
    - 8088:8088
    depends_on:
      superset-init:
        condition: service_completed_successfully
    volumes: *superset-volumes
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.superset.tls=true"
    - "traefik.http.routers.superset.entrypoints=https"
    - "traefik.http.routers.superset.rule=(Host(`${DOMAIN}`) || Path(`/health`))"
    profiles:
    - web

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["sh", "-c", "superset db upgrade && superset fab import-roles -p /app/pythonpath/roles.json"]
    env_file: .env
    volumes: *superset-volumes
    healthcheck:
      disable: true
    profiles:
    - web

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["celery", "--app=superset.tasks.celery_app:app", "worker", "--pool=prefork",
      "-O", "fair", "-l", "INFO", "--task-events"]
    env_file: .env
    restart: unless-stopped
    volumes: *superset-volumes
    healthcheck:
      test: ["CMD-SHELL", "celery -A superset.tasks.celery_app:app inspect ping -d\
          \ celery@$$HOSTNAME"]
    profiles:
    - worker

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["celery", "--app=superset.tasks.celery_app:app", "beat", "-l", "INFO",
      "-s", '"${SUPERSET_HOME}"/celerybeat-schedule']
    env_file: .env
    restart: unless-stopped
    volumes: *superset-volumes
    healthcheck:
      disable: true
    profiles:
    - worker

volumes:
  superset_home:
    external: false
  vault:
