---
sources:
  collect_vault_metrics:
    type: prometheus_scrape
    endpoints:
    - https://localhost:8202/v1/sys/metrics?format=prometheus
    scrape_interval_secs: 60
    tls:
      verify_certificate: false

transforms:
  cleanup_vault_metrics:
    type: remap
    drop_on_abort: true
    inputs:
    - 'collect_vault_metrics'
    source: |
      ## Any metrics that match these prefixes or names will be dropped entirely
      abort_name_match, err = match_any(.name, [r'^vault_raft_replication_heartbeat_.*', r'^vault_raft_replication_appendEntries_rpc_.*', r'^vault_raft_replication_appendEntries_logs_.*', r'^vault_raft_replication_installSnapshot_.*', r'^vault_route_.*'])
      if abort_name_match {
        abort
      }

  add_labels_to_vault_metrics:
    type: remap
    inputs:
    - 'cleanup_vault_metrics'
    source: |
      .tags.environment = "${ENVIRONMENT}"
      .tags.application = "vault"
      .tags.service = "vault"
      .tags.org_unit = "operations"
      .tags.job = "integrations/vault"

sinks:
  ship_vault_metrics_to_grafana_cloud:
    inputs:
    - 'add_labels_to_vault_metrics'
    type: prometheus_remote_write
    endpoint: https://prometheus-prod-10-prod-us-central-0.grafana.net/api/prom/push
    healthcheck: false
    auth:
      strategy: basic
      user: "${GRAFANA_CLOUD_PROMETHEUS_API_USER}"
      password: ${GRAFANA_CLOUD_API_KEY}
