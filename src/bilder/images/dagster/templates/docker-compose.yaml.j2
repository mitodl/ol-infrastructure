version: "3.7"

services:
  dagit:
    image: mitodl/data-platform-dagit:{{ context.dagster_version }}
    container_name: dagit
    restart: unless-stopped
    ports:
    - ":3000"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dagit.rule=Host(`${DAGSTER_HOSTNAME}`)"
      - "traefik.http.routers.dagit.middlewares=traefik-forward-auth"
      - "traefik.http.routers.dagit.tls=true"
  dagster-daemon:
    image: mitodl/data-platform-dagster-daemon:{{ context.dagster_version }}
    container_name: dagster-daemon
    restart: unless-stopped
    env_file:
      - .env
  edx-pipeline:
    image: mitodl/data-platform-edx-pipeline:{{ context.dagster_version }}
    container_name: edx-pipeline
    restart: unless-stopped
    ports:
    - "4000"
    command: ["--package-name", "ol_orchestrate.repositories.open_edx"]
    volumes:
    - "{{ context.edx_pipeline_definition_directory }}:/etc/dagster/:ro"
    env_file:
      - .env
  lakehouse-assets-graph:
    image: mitodl/data-platform-lakehouse-assets-graph:{{ context.dagster_version }}
    container_name: lakehouse-assets-graph
    restart: unless-stopped
    ports:
    - "4000"
    command: ["--package-name", "ol_orchestrate.definitions.elt"]
    env_file:
      - .env
  edx-gcs-courses-pipeline:
    image: mitodl/data-platform-edx-gcs-courses-pipeline:{{ context.dagster_version }}
    container_name: edx-gcs-courses-pipeline
    restart: unless-stopped
    ports:
    - "4000"
    command: ["--package-name", "ol_orchestrate.repositories.edx_gcs_courses"]
    volumes:
    - "{{ context.edx_pipeline_definition_directory }}:/etc/dagster/:ro"
    env_file:
      - .env
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.http.address=:80"
      - "--entryPoints.http.http.redirections.entryPoint.to=https"
      - "--entryPoints.http.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.https.address=:443"
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--providers.file.filename=/traefik/traefik.yaml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "{{ context.traefik_directory}}/traefik.yaml:/traefik/traefik.yaml:ro"
      - "{{ context.certificate_file }}:/etc/traefik/star.odl.mit.edu.crt:ro"
      - "{{ context.certificate_key_file }}:/etc/traefik/star.odl.mit.edu.key:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    container_name: traefik-forward-auth
    restart: unless-stopped
    env_file:
      - .env_traefik_forward_auth
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"
