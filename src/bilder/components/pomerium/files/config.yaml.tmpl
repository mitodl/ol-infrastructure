{{with secret "secret-airbyte/pomerium" }}
# See detailed configuration settings : https://www.pomerium.com/docs/reference/

# this is the domain the identity provider will callback after a user authenticates
# form: https://< whatever >
authenticate_service_url: "https://{{ .Data.data.authenticate_server_address }}"

# certificate settings:  https://www.pomerium.com/docs/reference/certificates.html
# These paths are within the docker container, not the host machine
certificate_file: /pomerium/cert.pem
certificate_key_file: /pomerium/privkey.pem

##################################################################################
# Identity provider settings : https://www.pomerium.com/docs/identity-providers/ #
# The keys required in this section vary depending on your IdP. See the          #
# appropriate docs for your IdP to configure Pomerium accordingly.               #
##################################################################################
# https://www.pomerium.com/docs/identity-providers/github.html
idp_provider: github
idp_client_id: "{{ .Data.data.idp_client_id }}"
idp_client_secret: "{{ .Data.data.idp_client_secret }}"
idp_service_account: "{{ .Data.data.idp_service_account }}"

# https://github.com/pomerium/pomerium/blob/main/scripts/generate_self_signed_signing_key.sh
# base64 encoded, no newlines
signing_key: "{{ .Data.data.signing_key }}"

# Generate 256 bit random keys  e.g. `head -c32 /dev/urandom | base64`
cookie_secret: "{{ .Data.data.cookie_secret }}"
timeout_read: 1800s
routes:
- from: "https://{{ .Data.data.application_address }}/"
  ## TODO: MAD 20220606 Need to come up with a way to paramartize this or making it more generic
  ## OR, perhaps this becomes the standard. If were going to expose an app frontend, it shall be named 'webapp'
  to: http://webapp:80
  pass_identity_headers: true
  timeout: 1800s
  policy:
  - allow:
      or:
      - groups:
          has: '{{ .Data.data.allowed_group }}'
{{end}}
