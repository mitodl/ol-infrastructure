---
resource_types:
- name: packer
  source:
    repository: mitodl/concourse-packer-resource
    tag: latest
  type: docker-image
- name: packer-builder
  source:
    repository: mitodl/concourse-packer-resource-builder
    tag: latest
  type: docker-image
- name: ami
  type: docker-image
  source:
    repository: jdub/ami-resource
- name: pulumi
  source:
    repository: mitodl/concourse-pulumi-resource-provisioner
  type: docker-image

resources:
- name: edxapp-worker-base-ami
  type: ami
  check_every: 30m
  source:
    region: us-east-1
    filters:
      owner-id: 610119931565
      is-public: false
      state: available
      name: edxapp-worker-((edx_release))-*
- name: edxapp-web-base-ami
  type: ami
  check_every: 30m
  source:
    region: us-east-1
    filters:
      owner-id: 610119931565
      is-public: false
      state: available
      name: edxapp-web-((edx_release))-*

- name: edxapp-worker-custom-ami
  type: ami
  check_every: 30m
  source:
    region: us-east-1
    filters:
      owner-id: 610119931565
      is-public: false
      state: available
      name: edxapp-worker-*
      tag:deployment: ((edx_installation))
      tag:edxapp_release: ((edx_release))
- name: edxapp-web-custom-ami
  type: ami
  check_every: 30m
  source:
    region: us-east-1
    filters:
      owner-id: 610119931565
      is-public: false
      state: available
      name: edxapp-web-*
      tag:deployment: ((edx_installation))
      tag:edxapp_release: ((edx_release))

- icon: github
  name: packer_templates
  source:
    branch: main
    paths:
    - src/bilder/components/
    - src/bilder/images/edxapp/
    uri: https://github.com/mitodl/ol-infrastructure
  type: git

- icon: github
  name: pulumi_code
  source:
    branch: main
    paths:
    - src/ol_infrastructure/applications/edxapp/
    uri: https://github.com/mitodl/ol-infrastructure
  type: git

- name: deploy-edxapp
  source:
  type: pulumi
- name: packer-validate
  type: packer
- name: packer-build
  type: packer-builder

jobs:
- name: validate-custom-packer-template
  plan:
  - get: edxapp-worker-base-ami
    trigger: true
  - get: edxapp-web-base-ami
    trigger: true
  - get: packer_templates
    trigger: true
  - in_parallel:
    - put: packer-validate
      params:
        objective: validate
        only:
        - amazon-ebs.edxapp
        template: packer_templates/src/bilder/images/edxapp/custom_install.pkr.hcl
        var_files:
        - packer_templates/src/bilder/images/edxapp/packer_vars/((edx_installation)).pkrvars.hcl
        vars:
          node_type: web
    - put: packer-validate
      params:
        objective: validate
        only:
        - amazon-ebs.edxapp
        template: packer_templates/src/bilder/images/edxapp/custom_install.pkr.hcl
        var_files:
        - packer_templates/src/bilder/images/edxapp/packer_vars/((edx_installation)).pkrvars.hcl
        vars:
          node_type: worker

- name: build-custom-edxapp-amis
  plan:
  - get: edxapp-worker-base-ami
    trigger: true
    passed:
    - validate-custom-packer-template
  - get: edxapp-web-base-ami
    trigger: true
    passed:
    - validate-custom-packer-template
  - get: packer_templates
    trigger: true
  - in_parallel:
    - put: custom-edxapp-web-ami
      resource: packer-build
      params:
        env_vars:
          AWS_REGION: us-east-1
          PYTHONPATH: ${PYTHONPATH}:packer_templates/src
        objective: build
        only:
        - amazon-ebs.edxapp
        template: packer_templates/src/bilder/images/edxapp/custom_install.pkr.hcl
        var_files:
        - packer_templates/src/bilder/images/edxapp/packer_vars/((edx_installation)).pkrvars.hcl
        vars:
          node_type: web
    - put: custom-edxapp-worker-ami
      resource: packer-build
      params:
        env_vars:
          AWS_REGION: us-east-1
          PYTHONPATH: ${PYTHONPATH}:packer_templates/src
        objective: build
        only:
        - amazon-ebs.edxapp
        template: packer_templates/src/bilder/images/edxapp/custom_install.pkr.hcl
        var_files:
        - packer_templates/src/bilder/images/edxapp/packer_vars/((edx_installation)).pkrvars.hcl
        vars:
          node_type: worker

- name: deploy-edxapp-ci
  plan:
  - get: packer-build
    passed: [build-custom-edxapp-amis]
    trigger: true
  - get: edxapp-web-custom-ami
  - get: edxapp-worker-custom-ami
  - get: pulumi_code
    trigger: true
  - task: set-aws-creds
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: amazon/aws-cli
          tag: 'latest'
      inputs:
      - name: pulumi_code
      outputs:
      - name: aws_creds
      run:
        path: pulumi_code/pipelines/infrastructure/scripts/generate_aws_config_from_instance_profile.sh
  - put: deploy-edxapp
    inputs:
    - aws_creds
    - pulumi_code
    get_params:
      skip_implicit_get: true
    params:
      env_pulumi:
        AWS_SHARED_CREDENTIALS_FILE: aws_creds/credentials
      action: update
      env_os:
        AWS_DEFAULT_REGION: us-east-1
        PYTHONPATH: /usr/lib/:/tmp/build/put/pulumi_code/src/
      project_name: ol-infrastructure-edxapp-application
      source_dir: pulumi_code/src/ol_infrastructure/applications/edxapp
      stack_name: applications.edxapp.((edx_installation)).CI

- name: deploy-edxapp-qa
  plan:
  - get: edxapp-web-custom-ami
    passed: [deploy-edxapp-ci]
  - get: edxapp-worker-custom-ami
    passed: [deploy-edxapp-ci]
  - get: pulumi_code
    passed: [deploy-edxapp-ci]
    trigger: false
  - task: set-aws-creds
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: amazon/aws-cli
          tag: 'latest'
      inputs:
      - name: pulumi_code
      outputs:
      - name: aws_creds
      run:
        path: pulumi_code/pipelines/infrastructure/scripts/generate_aws_config_from_instance_profile.sh
  - put: deploy-edxapp
    inputs:
    - aws_creds
    - pulumi_code
    get_params:
      skip_implicit_get: true
    params:
      env_pulumi:
        AWS_SHARED_CREDENTIALS_FILE: aws_creds/credentials
      action: update
      env_os:
        AWS_DEFAULT_REGION: us-east-1
        PYTHONPATH: /usr/lib/:/tmp/build/put/pulumi_code/src/
      project_name: ol-infrastructure-edxapp-application
      source_dir: pulumi_code/src/ol_infrastructure/applications/edxapp
      stack_name: applications.edxapp.((edx_installation)).QA

- name: deploy-edxapp-production
  plan:
  - get: edxapp-web-custom-ami
    passed: [deploy-edxapp-qa]
  - get: edxapp-worker-custom-ami
    passed: [deploy-edxapp-qa]
  - get: pulumi_code
    passed: [deploy-edxapp-qa]
    trigger: false
  - task: set-aws-creds
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: amazon/aws-cli
          tag: 'latest'
      inputs:
      - name: pulumi_code
      outputs:
      - name: aws_creds
      run:
        path: pulumi_code/pipelines/infrastructure/scripts/generate_aws_config_from_instance_profile.sh
  - put: deploy-edxapp
    inputs:
    - aws_creds
    - pulumi_code
    get_params:
      skip_implicit_get: true
    params:
      env_pulumi:
        AWS_SHARED_CREDENTIALS_FILE: aws_creds/credentials
      action: update
      env_os:
        AWS_DEFAULT_REGION: us-east-1
        PYTHONPATH: /usr/lib/:/tmp/build/put/pulumi_code/src/
      project_name: ol-infrastructure-edxapp-application
      source_dir: pulumi_code/src/ol_infrastructure/applications/edxapp
      stack_name: applications.edxapp.((edx_installation)).Production
