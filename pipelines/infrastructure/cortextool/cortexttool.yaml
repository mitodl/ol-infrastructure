---
jobs:
- build_log_retention:
    days: 90
  name: sync-alertmanager-config-to-ci
  plan:
  - get: gitrepo-alertmanager-config
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-alertmanager-config
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortex-amconfig-api-address))"
          export CORTEX_API_USER="((cortextool.cortex-amconfig-api-user-ci))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-ci))"
          export CORTEX_TENANT_ID="((cortextool.cortex-amconfig-api-user-ci))"
          sed -i -e 's/%% OPS_TEAM_OPS_GENIE_API_KEY %%/((cortextool.ops-team-ops-genie-api-key))/' gitrepo-alertmanager-config/alertmanager.yaml
          sed -i -e 's/%% TESTING_OPS_GENIE_API_KEY %%/((cortextool.testing-ops-genie-api-key))/' gitrepo-alertmanager-config/alertmanager.yaml
          sed -i -e 's/%% ENVIRONMENT_NAME %%/CI/' gitrepo-alertmanager-config/alertmanager.yaml
          cortextool alertmanager load gitrepo-alertmanager-config/alertmanager.yaml
        path: sh
    task: push-alertmanager-config
- build_log_retention:
    days: 90
  name: sync-alertmanager-config-to-qa
  plan:
  - get: gitrepo-alertmanager-config
    passed:
    - sync-alertmanager-config-to-ci
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-alertmanager-config
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortex-amconfig-api-address))"
          export CORTEX_API_USER="((cortextool.cortex-amconfig-api-user-qa))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-qa))"
          export CORTEX_TENANT_ID="((cortextool.cortex-amconfig-api-user-qa))"
          sed -i -e 's/%% OPS_TEAM_OPS_GENIE_API_KEY %%/((cortextool.ops-team-ops-genie-api-key))/' gitrepo-alertmanager-config/alertmanager.yaml
          sed -i -e 's/%% TESTING_OPS_GENIE_API_KEY %%/((cortextool.testing-ops-genie-api-key))/' gitrepo-alertmanager-config/alertmanager.yaml
          sed -i -e 's/%% ENVIRONMENT_NAME %%/QA/' gitrepo-alertmanager-config/alertmanager.yaml
          cortextool alertmanager load gitrepo-alertmanager-config/alertmanager.yaml
        path: sh
    task: push-alertmanager-config
- build_log_retention:
    days: 90
  name: sync-alertmanager-config-to-production
  plan:
  - get: gitrepo-alertmanager-config
    passed:
    - sync-alertmanager-config-to-qa
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-alertmanager-config
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortex-amconfig-api-address))"
          export CORTEX_API_USER="((cortextool.cortex-amconfig-api-user-production))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-qa))"
          export CORTEX_TENANT_ID="((cortextool.cortex-amconfig-api-user-production))"
          sed -i -e 's/%% OPS_TEAM_OPS_GENIE_API_KEY %%/((cortextool.ops-team-ops-genie-api-key))/' gitrepo-alertmanager-config/alertmanager.yaml
          sed -i -e 's/%% TESTING_OPS_GENIE_API_KEY %%/((cortextool.testing-ops-genie-api-key))/' gitrepo-alertmanager-config/alertmanager.yaml
          sed -i -e 's/%% ENVIRONMENT_NAME %%/Production/' gitrepo-alertmanager-config/alertmanager.yaml
          cortextool alertmanager load gitrepo-alertmanager-config/alertmanager.yaml
        path: sh
    task: push-alertmanager-config
- build_log_retention:
    days: 90
  name: lint-managed-cortex-rules
  plan:
  - get: gitrepo-cortex-rules
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-cortex-rules
      outputs:
      - name: changed-repo
      platform: linux
      run:
        args:
        - -exc
        - |
          cortextool rules lint gitrepo-cortex-rules/cortex-rules/*.yaml
          cp -Rv gitrepo-cortex-rules/. changed-repo
        path: sh
    task: lint-rules
  - config:
      image_resource:
        name: ""
        source:
          repository: bitnami/git
          tag: 2.35.1
        type: registry-image
      inputs:
      - name: changed-repo
      outputs:
      - name: changed-repo
      platform: linux
      run:
        args:
        - -xc
        - |
          cd changed-repo
          git config user.name "concourse"
          git config user.email "odl-devops@mit.edu"
          UNTRACKED_FILES=`git ls-files --other --exclude-standard --directory`
          git diff --exit-code
          if [ $? != 0 ] || [ "$UNTRACKED_FILES" != "" ]; then
            git add .
            git commit -m "Automated linter commit"
          else
            echo "Nothing to commit."
          fi
        path: bash
    task: commit-linted-cortex-rules
  - params:
      repository: changed-repo
    put: gitrepo-cortex-rules
- build_log_retention:
    days: 90
  name: sync-managed-cortex-rules-to-ci
  plan:
  - get: gitrepo-cortex-rules
    passed:
    - lint-managed-cortex-rules
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-cortex-rules
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortex-rules-api-address))"
          export CORTEX_API_USER="((cortextool.cortex-rules-api-user-ci))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-ci))"
          export CORTEX_TENANT_ID="((cortextool.cortex-rules-api-user-ci))"
          sed -i -e 's/%% ENVIRONMENT_NAME %%/CI/' gitrepo-cortex-rules/cortex-rules/*
          cortextool rules sync gitrepo-cortex-rules/cortex-rules/*
        path: sh
    task: push-rules
- build_log_retention:
    days: 90
  name: sync-managed-cortex-rules-to-qa
  plan:
  - get: gitrepo-cortex-rules
    passed:
    - sync-managed-cortex-rules-to-ci
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-cortex-rules
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortex-rules-api-address))"
          export CORTEX_API_USER="((cortextool.cortex-rules-api-user-qa))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-qa))"
          export CORTEX_TENANT_ID="((cortextool.cortex-rules-api-user-qa))"
          sed -i -e 's/%% ENVIRONMENT_NAME %%/QA/' gitrepo-cortex-rules/cortex-rules/*
          cortextool rules sync gitrepo-cortex-rules/cortex-rules/*
        path: sh
    task: push-rules
- build_log_retention:
    days: 90
  name: sync-managed-cortex-rules-to-production
  plan:
  - get: gitrepo-cortex-rules
    passed:
    - sync-managed-cortex-rules-to-qa
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-cortex-rules
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortex-rules-api-address))"
          export CORTEX_API_USER="((cortextool.cortex-rules-api-user-production))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-production))"
          export CORTEX_TENANT_ID="((cortextool.cortex-rules-api-user-production))"
          sed -i -e 's/%% ENVIRONMENT_NAME %%/Production/' gitrepo-cortex-rules/cortex-rules/*
          cortextool rules sync gitrepo-cortex-rules/cortex-rules/*
        path: sh
    task: push-rules
- build_log_retention:
    days: 90
  name: lint-managed-loki-rules
  plan:
  - get: gitrepo-loki-rules
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-loki-rules
      outputs:
      - name: changed-repo
      platform: linux
      run:
        args:
        - -exc
        - |
          cortextool rules lint gitrepo-loki-rules/cortex-rules/*.yaml
          cp -Rv gitrepo-loki-rules/. changed-repo
        path: sh
    task: lint-rules
  - config:
      image_resource:
        name: ""
        source:
          repository: bitnami/git
          tag: 2.35.1
        type: registry-image
      inputs:
      - name: changed-repo
      outputs:
      - name: changed-repo
      platform: linux
      run:
        args:
        - -xc
        - |
          cd changed-repo
          git config user.name "concourse"
          git config user.email "odl-devops@mit.edu"
          UNTRACKED_FILES=`git ls-files --other --exclude-standard --directory`
          git diff --exit-code
          if [ $? != 0 ] || [ "$UNTRACKED_FILES" != "" ]; then
            git add .
            git commit -m "Automated linter commit"
          else
            echo "Nothing to commit."
          fi
        path: bash
    task: commit-linted-loki-rules
  - params:
      repository: changed-repo
    put: gitrepo-loki-rules
- build_log_retention:
    days: 90
  name: sync-managed-loki-rules-to-ci
  plan:
  - get: gitrepo-loki-rules
    passed:
    - lint-managed-loki-rules
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-loki-rules
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.loki-rules-api-address))"
          export CORTEX_API_USER="((cortextool.loki-rules-api-user-ci))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-ci))"
          export CORTEX_TENANT_ID="((cortextool.loki-rules-api-user-ci))"
          sed -i -e 's/%% ENVIRONMENT_NAME %%/CI/' gitrepo-loki-rules/loki-rules/*
          cortextool rules sync --backend=loki gitrepo-loki-rules/loki-rules/*
        path: sh
    task: push-rules
- build_log_retention:
    days: 90
  name: sync-managed-loki-rules-to-qa
  plan:
  - get: gitrepo-loki-rules
    passed:
    - sync-managed-loki-rules-to-ci
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-loki-rules
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.loki-rules-api-address))"
          export CORTEX_API_USER="((cortextool.loki-rules-api-user-qa))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-qa))"
          export CORTEX_TENANT_ID="((cortextool.loki-rules-api-user-qa))"
          sed -i -e 's/%% ENVIRONMENT_NAME %%/QA/' gitrepo-loki-rules/loki-rules/*
          cortextool rules sync --backend=loki gitrepo-loki-rules/loki-rules/*
        path: sh
    task: push-rules
- build_log_retention:
    days: 90
  name: sync-managed-loki-rules-to-production
  plan:
  - get: gitrepo-loki-rules
    passed:
    - sync-managed-loki-rules-to-qa
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
        type: registry-image
      inputs:
      - name: gitrepo-loki-rules
      platform: linux
      run:
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.loki-rules-api-address))"
          export CORTEX_API_USER="((cortextool.loki-rules-api-user-production))"
          export CORTEX_API_KEY="((cortextool.cortex-api-key-production))"
          export CORTEX_TENANT_ID="((cortextool.loki-rules-api-user-production))"
          sed -i -e 's/%% ENVIRONMENT_NAME %%/Production/' gitrepo-loki-rules/loki-rules/*
          cortextool rules sync --backend=loki gitrepo-loki-rules/loki-rules/*
        path: sh
    task: push-rules
resources:
- icon: github
  name: gitrepo-alertmanager-config
  source:
    branch: main
    paths:
    - alertmanager.yaml
    private_key: ((cortextool.ssh-key))
    uri: git@github.com:mitodl/grafana-alerts.git
  type: git
- icon: github
  name: gitrepo-cortex-rules
  source:
    branch: main
    paths:
    - cortex-rules/*
    private_key: ((cortextool.ssh-key))
    uri: git@github.com:mitodl/grafana-alerts.git
  type: git
- icon: github
  name: gitrepo-loki-rules
  source:
    branch: main
    paths:
    - loki-rules/*
    private_key: ((cortextool.ssh-key))
    uri: git@github.com:mitodl/grafana-alerts.git
  type: git
