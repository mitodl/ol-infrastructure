---
resources:
- name: gitrepo
  type: git
  icon: github
  source:
    branch: main
    uri: git@github.com:mitodl/grafana-alerts.git
    private_key: ((cortextool.ssh-key))
jobs:
- name: lint-managed-rules
  build_log_retention:
    days: 90
  plan:
  - get: gitrepo
    trigger: true
  - task: lint-rules
    config:
      inputs:
      - name: gitrepo
      outputs:
      - name: changed-repo
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
      run:
        path: sh
        args:
        - -exc
        - |
          cortextool rules lint gitrepo/rules/*.yaml
          cp -Rv gitrepo/. changed-repo
  - task: commit-linted-alerts
    config:
      inputs:
      - name: changed-repo
      outputs:
      - name: changed-repo
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: bitnami/git
          tag: 2.35.1
      run:
        path: bash
        args:
        - -xc
        - |
          cd changed-repo
          git config user.name "concourse"
          git config user.email "odl-devops@mit.edu"
          UNTRACKED_FILES=`git ls-files --other --exclude-standard --directory`
          git diff --exit-code
          if [ $? != 0 ] || [ "$UNTRACKED_FILES" != "" ]; then
            git add .
            git commit -m "Automated linter commit"
          else
            echo "Nothing to commit."
          fi
  - put: gitrepo
    params:
      repository: changed-repo
- name: sync-alertmanager-config-to-ci
  build_log_retention:
    days: 90
  plan:
  - get: gitrepo
    trigger: true
  - task: push-alertmanager-config
    config:
      inputs:
      - name: gitrepo
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
      run:
        path: sh
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortext-amconfig-api-address))"
          export CORTEX_API_USER="((cortextool.cortext-amconfig-api-user-ci))"
          export CORTEX_API_KEY="((cortextool.cortext-api-key-ci))"
          export CORTEX_TENANT_ID="((cortextool.cortext-amconfig-api-user-ci))"
          sed -i -e 's/%% OPS_TEAM_OPS_GENIE_API_KEY %%/((cortextool.ops-team-ops-genie-api-key))/' gitrepo/alertmanager.yaml
          cortextool alertmanager load gitrepo/alertmanager.yaml
- name: sync-alertmanager-config-to-qa
  build_log_retention:
    days: 90
  plan:
  - get: gitrepo
    trigger: true
    passed: [sync-alertmanager-config-to-ci]
  - task: push-alertmanager-config
    config:
      inputs:
      - name: gitrepo
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
      run:
        path: sh
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortext-amconfig-api-address))"
          export CORTEX_API_USER="((cortextool.cortext-amconfig-api-user-qa))"
          export CORTEX_API_KEY="((cortextool.cortext-api-key-qa))"
          export CORTEX_TENANT_ID="((cortextool.cortext-amconfig-api-user-qa))"
          sed -i -e 's/%% OPS_TEAM_OPS_GENIE_API_KEY %%/((cortextool.ops-team-ops-genie-api-key))/' gitrepo/alertmanager.yaml
          cortextool alertmanager load gitrepo/alertmanager.yaml
- name: sync-alertmanager-config-to-production
  build_log_retention:
    days: 90
  plan:
  - get: gitrepo
    trigger: true
    passed: [sync-alertmanager-config-to-qa]
  - task: push-alertmanager-config
    config:
      inputs:
      - name: gitrepo
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
      run:
        path: sh
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortext-amconfig-api-address))"
          export CORTEX_API_USER="((cortextool.cortext-amconfig-api-user-production))"
          export CORTEX_API_KEY="((cortextool.cortext-api-key-qa))"
          export CORTEX_TENANT_ID="((cortextool.cortext-amconfig-api-user-production))"
          sed -i -e 's/%% OPS_TEAM_OPS_GENIE_API_KEY %%/((cortextool.ops-team-ops-genie-api-key))/' gitrepo/alertmanager.yaml
          cortextool alertmanager load gitrepo/alertmanager.yaml
- name: sync-managed-rules-to-ci
  build_log_retention:
    days: 90
  plan:
  - get: gitrepo
    trigger: true
    passed: [lint-managed-rules]
  - task: push-rules
    config:
      inputs:
      - name: gitrepo
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
      run:
        path: sh
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortext-rules-api-address))"
          export CORTEX_API_USER="((cortextool.cortext-rules-api-user-ci))"
          export CORTEX_API_KEY="((cortextool.cortext-api-key-ci))"
          export CORTEX_TENANT_ID="((cortextool.cortext-rules-api-user-ci))"
          cortextool rules sync gitrepo/rules/*
- name: sync-managed-rules-to-qa
  build_log_retention:
    days: 90
  plan:
  - get: gitrepo
    trigger: true
    passed: [sync-managed-rules-to-ci]
  - task: push-rules
    config:
      inputs:
      - name: gitrepo
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
      run:
        path: sh
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortext-rules-api-address))"
          export CORTEX_API_USER="((cortextool.cortext-rules-api-user-qa))"
          export CORTEX_API_KEY="((cortextool.cortext-api-key-qa))"
          export CORTEX_TENANT_ID="((cortextool.cortext-rules-api-user-qa))"
          cortextool rules sync gitrepo/rules/*
- name: sync-managed-rules-to-production
  build_log_retention:
    days: 90
  plan:
  - get: gitrepo
    trigger: true
    passed: [sync-managed-rules-to-qa]
  - task: push-rules
    config:
      inputs:
      - name: gitrepo
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: grafana/cortex-tools
          tag: v0.10.7
      run:
        path: sh
        args:
        - -exc
        - |
          export CORTEX_ADDRESS="((cortextool.cortext-rules-api-address))"
          export CORTEX_API_USER="((cortextool.cortext-rules-api-user-production))"
          export CORTEX_API_KEY="((cortextool.cortext-api-key-production))"
          export CORTEX_TENANT_ID="((cortextool.cortext-rules-api-user-production))"
          cortextool rules sync gitrepo/rules/*
