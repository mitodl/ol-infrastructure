---
# This pipeline uses a bit of a hack for populating Consul KV data across datacenters.
# Rather than rely on exposing the worker node's DNS and host network it launches a Consul
# agent and uses the auto-join functionality to gain access to the cluster and write data
# using the Consul CLI.
jobs:
- name: update-lms-template
  plan:
  - get: edxapp_templates
    trigger: true
  - config:
      image_resource:
        source:
          repository: debian
        type: registry-image
      inputs:
      - name: edxapp_templates
      outputs:
      - name: lms_template
      platform: linux
      run:
        args:
        - -exc
        - /bin/cat edxapp_templates/src/bilder/images/edxapp/templates/common_values.yml
          edxapp_templates/src/bilder/images/edxapp/templates/lms_only.yml > lms_template/lms.yml.tmpl
        path: sh
    task: compile-lms-template
  - config:
      image_resource:
        source:
          repository: consul
        type: registry-image
      inputs:
      - name: lms_template
      platform: linux
      run:
        args:
        - -exc
        - |
          consul agent -data-dir=/tmp/consul-test -retry-join="provider=aws tag_key=consul_env tag_value=operations-qa" -encrypt=((consul.encrypt_key)) -datacenter=((operations_datacenter)) -pid-file=/tmp/consul.pid &
          until [ 3 -le $(consul members | wc -l) ]; do sleep 1; done
          consul kv put -datacenter=((edxapp_datacenter)) edxapp-template/lms '@lms_template/lms.yml.tmpl'
          kill -INT $(cat /tmp/consul.pid)
        path: sh
    task: consul-lms
- name: update-studio-template
  plan:
  - get: edxapp_templates
    trigger: true
  - config:
      image_resource:
        source:
          repository: debian
        type: registry-image
      inputs:
      - name: edxapp_templates
      outputs:
      - name: studio_template
      platform: linux
      run:
        args:
        - -exc
        - /bin/cat edxapp_templates/src/bilder/images/edxapp/templates/common_values.yml
          edxapp_templates/src/bilder/images/edxapp/templates/studio_only.yml > studio_template/studio.yml.tmpl
        path: sh
    task: compile-studio-template
  - config:
      image_resource:
        source:
          repository: consul
        type: registry-image
      inputs:
      - name: studio_template
      platform: linux
      run:
        args:
        - -exc
        - |
          consul agent -data-dir=/tmp/consul-test -retry-join="provider=aws tag_key=consul_env tag_value=operations-qa" -encrypt=((consul.encrypt_key)) -datacenter=((operations_datacenter)) -pid-file=/tmp/consul.pid &
          until [ 3 -le $(consul members | wc -l) ]; do sleep 1; done
          consul kv put -datacenter=((edxapp_datacenter)) edxapp-template/studio '@studio_template/studio.yml.tmpl'
          kill -INT $(cat /tmp/consul.pid)
        path: sh
    task: consul-studio
resources:
- icon: github
  name: edxapp_templates
  source:
    branch: main
    paths:
    - src/bilder/images/edxapp/templates/lms_only.yml
    - src/bilder/images/edxapp/templates/studio_only.yml
    - src/bilder/images/edxapp/templates/common_values.yml
    uri: https://github.com/mitodl/ol-infrastructure
  type: git
