---
resources:
- name: s3_sync_resource
  type: git
  icon: github
  source:
    uri: https://github.com/mitodl/concourse-s3-sync-resource
    branch: master

- name: concourse-s3-sync-resource
  type: registry-image
  icon: docker
  source:
    tag: latest
    repository: mitodl/concourse-s3-sync-resource
    username: ((dockerhub.username))
    password: ((dockerhub.password))

jobs:
- name: build-and-publish-container
  public: true
  plan:
  - get: s3_sync_resource
    trigger: true
  - task: build-image
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: s3_sync_resource
      outputs:
      - name: image
      run:
        path: build
      params:
        CONTEXT: s3_sync_resource
  - put: concourse-s3-sync-resource
    params:
      image: image/image.tar
      additional_tags: s3_sync_resource/tag
  - task: tar-resource-files
    config:
      image_resource:
        name: ''
        source:
          repository: node
          tag: 14-buster-slim
        type: docker-image
      inputs:
      - name: concourse-s3-sync-resource
      - name: s3_sync_resource
      outputs:
      - name: concourse-s3-sync-resource
      platform: linux
      run:
        # Inspired by https://github.com/concourse/ci/blob/master/tasks/build-resource-types-image.yml
        args:
        - -exc
        - >-
          echo "Packaging s3-sync";
          cd concourse-s3-sync-resource;
          tar czf rootfs.tgz --directory=rootfs .;
          rm -rf ./rootfs/;
          version=$(cat ../s3_sync_resource/tag);
          echo { >> resource_metadata.json;
          echo \ \ \"type\": \"ocw-s3-sync-publisher\", >> resource_metadata.json;
          echo \ \ \"version\": \"${version}\", >> resource_metadata.json;
          echo \ \ \"privileged\": false, >> resource_metadata.json;
          echo \ \ \"version_history\": false >> resource_metadata.json;
          echo } >> resource_metadata.json;
          echo "resource_metadata.json contents:"
          cat resource_metadata.json;
          tar czf ./s3-sync.tgz rootfs.tgz resource_metadata.json;
        path: sh
  - task: packaged-resource-upload
    config:
      inputs:
      - name: concourse-s3-sync-resource
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: amazon/aws-cli, tag: latest}
      run:
        path: sh
        args:
        - -exc
        - |
          aws s3 cp ./concourse-s3-sync-resource/s3-sync.tgz s3://ol-eng-artifacts/bundled-concourse-resources/
