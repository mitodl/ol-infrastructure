---
jobs:
- name: convert-plone-to-hugo
  serial: true
  plan:
  - get: ocw-to-hugo
    trigger: true
  - get: ocw-json
    trigger: true
  - put: sync-static-resources
  - config:
      image_resource:
        name: ''
        source:
          repository: node
          tag: 16-bullseye-slim
        type: docker-image
      inputs:
      - name: ocw-to-hugo
      - name: ocw-json
      outputs:
      - name: ocw-markdown
      platform: linux
      run:
        args:
        - -exc
        - >-
          yarn install --pure-lockfile &&
          node .
          -i ../ocw-json
          -o ../ocw-markdown
          --staticPrefix /courses
          --strips3
        dir: ocw-to-hugo
        path: sh
    task: convert-json-to-markdown
  - inputs:
    - ocw-markdown
    put: ocw-markdown-upload
resource_types:
- name: s3-sync
  source:
    repository: mitodl/concourse-s3-sync-resource
  type: docker-image
resources:
- name: ocw-json
  source:
    bucket: ((open-learning-course-data-bucket))
    options:
    - --exclude "*"
    - --include "*_parsed.json"
  type: s3-sync
- name: sync-static-resources
  source:
    source_bucket: ((open-learning-course-data-bucket))
    bucket: ((ol-ocw-studio-app-bucket))
    path: courses/
    options:
    - --include '*'
    - --exclude "extracts/*"
    - --exclude "*.html"
    - --exclude "*.html.json"
    - --exclude "*_master.json"
    - --exclude "*parsed.json"
  type: s3-sync
- name: ocw-markdown-upload
  source:
    bucket: ((ocw-studio-import-bucket))
    directory: ocw-markdown/
  type: s3-sync
- name: ocw-to-hugo
  source:
    branch: release
    uri: https://github.com/mitodl/ocw-to-hugo
  type: git
